/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cs.superleague.api;

import cs.superleague.models.AnalyticsCreateFinancialReportRequest;
import cs.superleague.models.AnalyticsCreateFinancialReportResponse;
import cs.superleague.models.AnalyticsCreateMonthlyReportRequest;
import cs.superleague.models.AnalyticsCreateMonthlyReportResponse;
import cs.superleague.models.AnalyticsCreateUserReportRequest;
import cs.superleague.models.AnalyticsCreateUserReportResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@Api(value = "analytics", description = "the analytics API")
public interface AnalyticsApi {

    @ApiOperation(value = "Endpoint for creating user report", nickname = "createFinancialReport", notes = "Refer to summary", response = AnalyticsCreateFinancialReportResponse.class, tags={ "Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns whether Report was downloaded", response = AnalyticsCreateFinancialReportResponse.class) })
    @RequestMapping(value = "/analytics/createFinancialReport",
        produces = { "application/json", "application/pdf", "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AnalyticsCreateFinancialReportResponse> createFinancialReport(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody AnalyticsCreateFinancialReportRequest body
);


    @ApiOperation(value = "Endpoint for creating monthly report", nickname = "createMonthlyReport", notes = "Refer to summary", response = AnalyticsCreateMonthlyReportResponse.class, tags={ "Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns whether Report was downloaded", response = AnalyticsCreateMonthlyReportResponse.class) })
    @RequestMapping(value = "/analytics/createMonthlyReport",
        produces = { "application/json", "application/pdf", "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AnalyticsCreateMonthlyReportResponse> createMonthlyReport(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody AnalyticsCreateMonthlyReportRequest body
);


    @ApiOperation(value = "Endpoint for creating user report", nickname = "createUserReport", notes = "Refer to summary", response = AnalyticsCreateUserReportResponse.class, tags={ "Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns whether Report was downloaded", response = AnalyticsCreateUserReportResponse.class) })
    @RequestMapping(value = "/analytics/createUserReport",
        produces = { "application/json", "application/pdf", "text/plain" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<AnalyticsCreateUserReportResponse> createUserReport(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody AnalyticsCreateUserReportRequest body
);

}
