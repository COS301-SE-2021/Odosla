/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package cs.superleague.api;

import cs.superleague.models.ShoppingAddShopperRequest;
import cs.superleague.models.ShoppingAddShopperResponse;
import cs.superleague.models.ShoppingGetItemsRequest;
import cs.superleague.models.ShoppingGetItemsResponse;
import cs.superleague.models.ShoppingGetNextQueuedRequest;
import cs.superleague.models.ShoppingGetNextQueuedResponse;
import cs.superleague.models.ShoppingGetShoppersRequest;
import cs.superleague.models.ShoppingGetShoppersResponse;
import cs.superleague.models.ShoppingGetStoresRequest;
import cs.superleague.models.ShoppingGetStoresResponse;
import cs.superleague.models.ShoppingPopulateTablesRequest;
import cs.superleague.models.ShoppingPopulateTablesResponse;
import cs.superleague.models.ShoppingRemoveQueuedOrderRequest;
import cs.superleague.models.ShoppingRemoveQueuedOrderResponse;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-08-13T18:57:36.804039800+02:00[Africa/Harare]")
@Api(value = "shopping", description = "the shopping API")
public interface ShoppingApi {

    @ApiOperation(value = "Endpoint for adding shopper to shopper list", nickname = "addShopper", notes = "Refer to summary", response = ShoppingAddShopperResponse.class, tags={ "Shopping", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns upon success", response = ShoppingAddShopperResponse.class) })
    @RequestMapping(value = "/shopping/addShopper",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingAddShopperResponse> addShopper(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingAddShopperRequest body
);


    @ApiOperation(value = "Endpoint for Get Items use case", nickname = "getItems", notes = "Refer to summary", response = ShoppingGetItemsResponse.class, tags={ "Shopping", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns items upon success", response = ShoppingGetItemsResponse.class) })
    @RequestMapping(value = "/shopping/getItems",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingGetItemsResponse> getItems(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingGetItemsRequest body
);


    @ApiOperation(value = "Endpoint for getting next queue", nickname = "getNextQueued", notes = "Refer to summary", response = ShoppingGetNextQueuedResponse.class, tags={ "User", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns upon success", response = ShoppingGetNextQueuedResponse.class) })
    @RequestMapping(value = "/shopping/getNextQueued",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingGetNextQueuedResponse> getNextQueued(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingGetNextQueuedRequest body
);


    @ApiOperation(value = "Endpoint for Get Shoppers use case", nickname = "getShoppers", notes = "Refer to summary", response = ShoppingGetShoppersResponse.class, tags={ "Shopping", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns upon success", response = ShoppingGetShoppersResponse.class) })
    @RequestMapping(value = "/shopping/getShoppers",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingGetShoppersResponse> getShoppers(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingGetShoppersRequest body
);


    @ApiOperation(value = "Endpoint for Get Stores use case", nickname = "getStores", notes = "Refer to summary", response = ShoppingGetStoresResponse.class, tags={ "Shopping", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns upon success", response = ShoppingGetStoresResponse.class) })
    @RequestMapping(value = "/shopping/getStores",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingGetStoresResponse> getStores(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingGetStoresRequest body
);


    @ApiOperation(value = "Endpoint populating tables", nickname = "populateTables", notes = "Refer to summary", response = ShoppingPopulateTablesResponse.class, tags={ "Shopping", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns success", response = ShoppingPopulateTablesResponse.class) })
    @RequestMapping(value = "/shopping/populateTables",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingPopulateTablesResponse> populateTables(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingPopulateTablesRequest body
);


    @ApiOperation(value = "Endpoint for removing a queued order.", nickname = "removeQueuedOrder", notes = "Refer to summary", response = ShoppingRemoveQueuedOrderResponse.class, tags={ "Shopping", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns upon success", response = ShoppingRemoveQueuedOrderResponse.class) })
    @RequestMapping(value = "/shopping/removeQueuedOrder",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<ShoppingRemoveQueuedOrderResponse> removeQueuedOrder(@ApiParam(value = "The input body required by this request" ,required=true )  @Valid @RequestBody ShoppingRemoveQueuedOrderRequest body
);

}
