openapi: 3.0.0

info:
  version: 0.0.1
  title: Library Service
  description: The library service

tags:
  - name: "Shopping"
  - name: "Payment"
  - name: "User"
  - name: "Notification"
  - name: "Delivery"
  - name: "Analytics"


paths:

  /shopping/populateTables:
    post:
      summary: Endpoint populating tables
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: populateTables
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_PopulateTablesRequest"
      responses:
        "200":
          description: Returns success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_PopulateTablesResponse"

  /shopping/getItems:
    post:
      summary: Endpoint for Get Items use case
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: getItems
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_GetItemsRequest"
      responses:
        "200":
          description: Returns items upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_GetItemsResponse"


  /shopping/addShopper:
    post:
      summary: Endpoint for adding shopper to shopper list
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: addShopper
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_AddShopperRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_AddShopperResponse"


  /shopping/getShoppers:
    post:
      summary: Endpoint for Get Shoppers use case
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: getShoppers
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_GetShoppersRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_GetShoppersResponse"

  /shopping/removeQueuedOrder:
    post:
      summary: Endpoint for removing a queued order.
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: removeQueuedOrder
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_RemoveQueuedOrderRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_RemoveQueuedOrderResponse"

  /shopping/getStores:
    post:
      summary: Endpoint for Get Stores use case
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: getStores
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_GetStoresRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_GetStoresResponse"



  /payment/updateOrder:
    post:
      summary: Endpoint for the Update Order use case
      tags:
        - "Payment"
      description: Refer to summary
      operationId: updateOrder
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment_UpdateOrderRequest"
      responses:
        "200":
          description: Returns updated order upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_UpdateOrderResponse"

  /payment/submitOrder:
    post:
      summary: Endpoint for the Submit Order use case
      tags:
        - "Payment"
      description: Refer to summary
      operationId: submitOrder
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment_SubmitOrderRequest"
      responses:
        "200":
          description: Returns submitted order upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_SubmitOrderResponse"


  /notification/sendEmailNotification:
    post:
      summary: Endpoint for sending an email notification
      tags:
        - "notification"
      description: Refer to summary
      operationId: sendEmailNotification
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification_SendEmailNotificationRequest"
      responses:
        "200":
          description: Returns whether the email was sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification_SendEmailNotificationResponse"


  /notification/sendDirectEmailNotification:
    post:
      summary: Endpoint for sending a direct email notification
      tags:
        - "notification"
      description: Refer to summary
      operationId: sendDirectEmailNotification
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/notification_SendDirectEmailNotificationRequest"
      responses:
        "200":
          description: Returns whether the email was sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notification_SendDirectEmailNotificationResponse"

  /user/setCart:
    post:
      summary: Endpoint for setting a shopping cart
      tags:
        - "User"
      description: Refer to summary
      operationId: setCart
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_SetCartRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_SetCartResponse"

  /user/clearShoppingCart:
    post:
      summary: Endpoint for clearing a shopping cart
      tags:
        - "User"
      description: Refer to summary
      operationId: clearShoppingCart
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_ClearShoppingCartRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_ClearShoppingCartResponse"

  /user/getShoppingCart:
    post:
      summary: Endpoint for getting a shopping cart
      tags:
        - "User"
      description: Refer to summary
      operationId: getShoppingCart
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_GetShoppingCartRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_GetShoppingCartResponse"

  /user/makeGroceryList:
    post:
      summary: Endpoint for making a grocery list
      tags:
        - "User"
      description: Refer to summary
      operationId: makeGroceryList
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_MakeGroceryListRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_MakeGroceryListResponse"

  /user/resetPassword:
    post:
      summary: Endpoint for reseting password
      tags:
        - "User"
      description: Refer to summary
      operationId: resetPassword
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_ResetPasswordRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_ResetPasswordResponse"

  /user/loginUser:
    post:
      summary: Endpoint for setting a shopping cart
      tags:
        - "User"
      description: Refer to summary
      operationId: loginUser
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_LoginRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_LoginResponse"

  /user/registerDriver:
    post:
      summary: Endpoint for setting a registering driver
      tags:
        - "User"
      description: Refer to summary
      operationId: registerDriver
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_RegisterDriverRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_RegisterDriverResponse"
  /user/registerShopper:
    post:
      summary: Endpoint for setting a registering shopper
      tags:
        - "User"
      description: Refer to summary
      operationId: registerShopper
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_RegisterShopperRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_RegisterShopperResponse"

  /user/registerCustomer:
    post:
      summary: Endpoint for setting a registering customer
      tags:
        - "User"
      description: Refer to summary
      operationId: registerCustomer
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_RegisterCustomerRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_RegisterCustomerResponse"

  /user/registerAdmin:
    post:
      summary: Endpoint for setting a registering admin
      tags:
        - "User"
      description: Refer to summary
      operationId: registerAdmin
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_RegisterAdminRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_RegisterAdminResponse"

  /user/verifyAccount:
    post:
      summary: Endpoint for verifying a user account
      tags:
        - "User"
      description: Refer to summary
      operationId: verifyAccount
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_AccountVerifyRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_AccountVerifyResponse"

  /user/setCurrentLocation:
    post:
      summary: Endpoint for setting Current Location Driver
      tags:
        - "User"
      description: Refer to summary
      operationId: setCurrentLocation
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_SetCurrentLocationRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_SetCurrentLocationResponse"

  /user/getCurrentUser:
    post:
      summary: Endpoint for to get Current user
      tags:
        - "User"
      description: Refer to summary
      operationId: getCurrentUser
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_GetCurrentUserRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_GetCurrentUserResponse"

  /user/updateShopperShift:
    post:
      summary: Endpoint for updating shopper shift
      tags:
        - "User"
      description: Refer to summary
      operationId: updateShopperShift
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_UpdateShopperShiftRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_UpdateShopperShiftResponse"

  /shopping/getNextQueued:
    post:
      summary: Endpoint for getting next queue
      tags:
        - "User"
      description: Refer to summary
      operationId: getNextQueued
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_GetNextQueuedRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_GetNextQueuedResponse"

  /shopping/getQueue:
    post:
      summary: Endpoint for getting the order queue of a shop
      tags:
        - "Shopping"
      description: Refer to summary
      operationId: getQueue
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/shopping_GetQueueRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shopping_GetQueueResponse"


  /payment/getStatus:
    post:
      summary: Endpoint for Get Status use case
      tags:
        - "Payment"
      description: Refer to summary
      operationId: getStatus
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment_GetStatusRequest"
      responses:
        "200":
          description: Returns status upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_GetStatusResponse"

  /payment/getItems:
    post:
      summary: Endpoint for Get Items use case
      tags:
        - "Payment"
      description: Refer to summary
      operationId: getItemsPayments
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment_GetItemsRequest"
      responses:
        "200":
          description: Returns status upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_GetItemsResponse"

  /user/scanItem:
    post:
      summary: Endpoint for scanning an item
      tags:
        - "user"
      description: Refer to summary
      operationId: scanItem
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_ScanItemRequest"
      responses:
        "200":
          description: Returns whether the email was sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_ScanItemResponse"

  /user/completePackagingOrder:
    post:
      summary: Endpoint for complete packaging order use case
      tags:
        - "user"
      description: Refer to summary
      operationId: completePackagingOrder
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_CompletePackagingOrderRequest"
      responses:
        "200":
          description: Returns whether the email was sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_CompletePackagingOrderResponse"

  /user/getGroceryLists:
    post:
      summary: Endpoint for get grocery lists use case
      tags:
        - "user"
      description: Refer to summary
      operationId: getGroceryLists
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_GetGroceryListRequest"
      responses:
        "200":
          description: Returns the groceryList
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_GetGroceryListResponse"

  /delivery/addDeliveryDetail:
    post:
      summary: Endpoint for add delivery detail
      tags:
        - "delivery"
      description: Refer to summary
      operationId: addDeliveryDetail
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_AddDeliveryDetailRequest"
      responses:
        "200":
          description: Returns whether the detail was added and the ID of that detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_AddDeliveryDetailResponse"

  /delivery/assignDriverToDelivery:
    post:
      summary: Endpoint for assign driver to delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: assignDriverToDelivery
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_AssignDriverToDeliveryRequest"
      responses:
        "200":
          description: Returns whether the driver was assigned to the delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_AssignDriverToDeliveryResponse"

  /delivery/createDelivery:
    post:
      summary: Endpoint for creating a delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: createDelivery
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_CreateDeliveryRequest"
      responses:
        "200":
          description: Returns whether the delivery was created or not
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_CreateDeliveryResponse"

  /delivery/getDeliveryDetail:
    post:
      summary: Endpoint for getting the detail of a delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: getDeliveryDetail
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_GetDeliveryDetailRequest"
      responses:
        "200":
          description: Returns the delivery detail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_GetDeliveryDetailResponse"

  /delivery/getDeliveryStatus:
    post:
      summary: Endpoint for getting the status of a delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: getDeliveryStatus
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_GetDeliveryStatusRequest"
      responses:
        "200":
          description: Returns the delivery status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_GetDeliveryStatusResponse"

  /delivery/getNextOrderForDriver:
    post:
      summary: Endpoint for getting the next order for a driver
      tags:
        - "delivery"
      description: Refer to summary
      operationId: getNextOrderForDriver
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_GetNextOrderForDriverRequest"
      responses:
        "200":
          description: Returns the next order for a driver
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_GetNextOrderForDriverResponse"

  /delivery/removeDriverFromDelivery:
    post:
      summary: Endpoint for removing a driver from a delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: removeDriverFromDelivery
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_RemoveDriverFromDeliveryRequest"
      responses:
        "200":
          description: Returns whether the driver was removed from the order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_RemoveDriverFromDeliveryResponse"

  /delivery/trackDelivery:
    post:
      summary: Endpoint for tracking a delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: trackDelivery
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_TrackDeliveryRequest"
      responses:
        "200":
          description: Returns the location of the delivery
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_TrackDeliveryResponse"

  /delivery/updateDeliveryStatus:
    post:
      summary: Endpoint for updating the status of a delivery
      tags:
        - "delivery"
      description: Refer to summary
      operationId: updateDeliveryStatus
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/delivery_UpdateDeliveryStatusRequest"
      responses:
        "200":
          description: Returns whether the status of the delivery was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/delivery_UpdateDeliveryStatusResponse"

  /user/updateDriverShift:
    post:
      summary: Endpoint for updating driver shift
      tags:
        - "User"
      description: Refer to summary
      operationId: updateDriverShift
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_UpdateDriverShiftRequest"
      responses:
        "200":
          description: Returns upon success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_UpdateDriverShiftResponse"


  /analytics/createUserReport:
    post:
      summary: Endpoint for creating user report
      tags:
        - "Analytics"
      description: Refer to summary
      operationId: createUserReport
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/analytics_CreateUserReportRequest"
      responses:
        "200":
          description: Returns whether Report was downloaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/analytics_CreateUserReportResponse"


  /payment/getCustomersActiveOrders:
    post:
      summary: Endpoint for the customers getting their active order
      tags:
        - "payment"
      description: Refer to summary
      operationId: getCustomerActiveOrders
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment_GetCustomersActiveOrdersRequest"
      responses:
        "200":
          description: Returns the orderID of the active order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/payment_GetCustomersActiveOrdersResponse"

  /user/completeDelivery:
    post:
      summary: Endpoint for complete delivery use case
      tags:
        - "user"
      description: Refer to summary
      operationId: completeDelivery
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_CompleteDeliveryRequest"
      responses:
        "200":
          description: Returns delivery is completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user_CompleteDeliveryResponse"

  /analytics/createFinancialReport:
    post:
      summary: Endpoint for creating user report
      tags:
        - "Analytics"
      description: Refer to summary
      operationId: createFinancialReport
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/analytics_CreateFinancialReportRequest"
      responses:
        "200":
          description: Returns whether Report was downloaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/analytics_CreateFinancialReportResponse"

  /analytics/createMonthlyReport:
    post:
      summary: Endpoint for creating monthly report
      tags:
        - "Analytics"
      description: Refer to summary
      operationId: createMonthlyReport
      requestBody:
        description: The input body required by this request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/analytics_CreateMonthlyReportRequest"
      responses:
        "200":
          description: Returns whether Report was downloaded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/analytics_CreateMonthlyReportResponse"

components:

  schemas:

    ItemObject:
      description: "Generic schema for an item"
      type: object
      properties:
        productId:
          type: string
        name:
          type: string
        barcode:
          type: string
        storeId:
          type: string
        price:
          type: number
        quantity:
          type: integer
        description:
          type: string
        imageUrl:
          type: string
        brand:
          type: string
        size:
          type: string
        itemType:
          type: string

    shopping_GetItemsRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string
          description: generated token used to identify the caller of the endpoint
        storeID:
          type: string

    shopping_GetItemsResponse:
      description: This object is returned as output
      type: object
      properties:
        errorMessage:
          type: string
          description: Will contain a descriptive error message if response code is not 200, else will be empty
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"


    shopping_AddShopperRequest:
      description: This object is expected as input
      type: object
      properties:
        shopperID:
          type: string
        storeID:
          type: string

    shopping_AddShopperResponse:
      description: This object is output
      type: object
      properties:
        success:
          type: boolean
          description: generated token used to identify the caller of the endpoint
        date:
          type: string
        message:
          type: string

    shopping_RemoveQueuedOrderRequest:
      description: this object is expected as input
      type: object
      properties:
        orderID:
          type: string
        storeID:
          type: string

    shopping_RemoveQueuedOrderResponse:
      description: this object is output
      type: object
      properties:
        isRemoved:
          type: boolean
        message:
          type: string
        orderID:
          type: string

    ShopperObject:
      description: "Generic schema for a shopper"
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        activationDate:
          type: string
        activationCode:
          type: string
        resetCode:
          type: string
        resetExpiration:
          type: string
        accountType:
          type: string
        shopperID:
          type: string
        storeID:
          type: string
        ordersCompleted:
          type: integer
        onShift:
          type: boolean
        isActive:
          type: boolean

    shopping_GetShoppersRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string
          description: generated token used to identify the caller of the endpoint
        storeID:
          type: string

    shopping_GetShoppersResponse:
      description: This object is expected as input
      type: object
      properties:
        errorMessage:
          type: string
          description: Will contain a descriptive error message if response code is not 200, else will be empty
        shoppers:
          type: array
          items:
            $ref: "#/components/schemas/ShopperObject"

    StoreObject:
      description: "Generic schema for a store"
      type: object
      properties:
        storeID:
          type: string
        storeBrand:
          type: string
        isOpen:
          type: boolean
        maxShoppers:
          type: integer
        maxOrders:
          type: integer
        openingTime:
          type: integer
        closingTime:
          type: integer
        imageUrl:
          type: string

    shopping_GetStoresRequest:
      description: This object is expected as input
      type: object

    shopping_GetStoresResponse:
      description: This object is expected as input
      type: object
      properties:
        response:
          type: boolean
        message:
          type: string
        stores:
          type: array
          items:
            $ref: "#/components/schemas/StoreObject"

    OrderObject:
      description: "Generic schema for an Order"
      type: object
      properties:
        orderId:
          type: string
        userId:
          type: string
        storeId:
          type: string
        shopperId:
          type: string
        createDate:
          type: string
        processDate:
          type: string
        totalPrice:
          type: number
        status:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"
        discount:
          type: number
        deliveryAddress:
          type: string
        storeAddress:
          type: string
        requiresPharmacy:
          type: boolean

    payment_UpdateOrderRequest:
      description: This object is expected as input
      type: object
      properties:
        orderId:
          type: string
          description: the id of the order to be generated
        userId:
          type: string
          description: generated token used to identify the caller of the endpoint
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"
        discount:
          type: number
        orderType:
          type: string
        deliveryAddress:
          type: string

    payment_UpdateOrderResponse:
      description: This object is expected as output
      type: object
      properties:
        message:
          type: string
          description: Will contain a descriptive error message if response code is not 200, else will be empty
        success:
          type: boolean
        timestamp:
          type: string
        order:
          type: object

    payment_SubmitOrderRequest:
      description: This object is expected as input
      type: object
      properties:
        userId:
          type: string
          description: generated token used to identify the caller of the endpoint
        listOfItems:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"
        discount:
          type: number
        storeId:
          type: string
        orderType:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        deliveryAddress:
          type: string

    payment_SubmitOrderResponse:
      description: This object is expected as output
      type: object
      properties:
        orderId:
          type: string
        message:
          type: string
          description: Will contain a descriptive error message if response code is not 200, else will be empty
        success:
          type: boolean
        timestamp:
          type: string

    notification_SendEmailNotificationRequest:
      description: This object is expected as input
      type: object
      properties:
        message:
          type: string
          description: This is the message that will be sent as a notification
        properties:
          type: object
          additionalProperties:
            type: string
          description: Hash map that needs to contain the Type (e.g delivery), Subject, UserType (e.g admin) and the UserID

    notification_SendEmailNotificationResponse:
      description: This object is expected as output
      type: object
      properties:
        responseMessage:
          type: string
          description: Will contain a descriptive error message if response code is not 200, else will be empty
        success:
          type: boolean

    notification_SendDirectEmailNotificationRequest:
      description: This object is expected as input
      type: object
      properties:
        message:
          type: string
          description: This is the message that will be sent as a notification
        properties:
          type: object
          additionalProperties:
            type: string
          description: Hash map that needs to contain the Subject and the email

    notification_SendDirectEmailNotificationResponse:
      description: This object is expected as output
      type: object
      properties:
        responseMessage:
          type: string
          description: Will contain a descriptive error message if response code is not 200, else will be empty
        success:
          type: boolean

    user_SetCartRequest:
      description: This object is expected as input
      type: object
      properties:
        customerID:
          type: string
          description: generated token used to identify the caller of the endpoint
        barcodes:
          type: array
          items:
            type: string

    user_SetCartResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_ClearShoppingCartRequest:
      description: This object is expected as input
      type: object
      properties:
        customerID:
          type: string
          description: generated token used to identify the caller of the endpoint

    user_ClearShoppingCartResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string


    user_GetShoppingCartRequest:
      description: This object is expected as input
      type: object
      properties:
        customerID:
          type: string
          description: generated token used to identify the caller of the endpoint

    user_GetShoppingCartResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"


    user_MakeGroceryListRequest:
      description: This object is expected as input
      type: object
      properties:
        JWTToken:
          type: string
          description: generated token used to identify the caller of the endpoint
        productIds:
          type: array
          items:
            type: string
        name:
          type: string

    user_MakeGroceryListResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_ResetPasswordRequest:
      description: This object is expected as input
      type: object
      properties:
        email:
          type: string
        userType:
          type: string

    user_ResetPasswordResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        resetCode:
          type: string

    GroceryListObject:
      description: "Generic schema for a GroceryList"
      type: object
      properties:
        groceryListID:
          type: string
        name:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ItemObject'


    UserObject:
      description: "Generic schema for a User"
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        activationDate:
          type: string
        activationCode:
          type: string
        resetCode:
          type: string
        resetExpiration:
          type: string
        accountType:
          type: string

    user_UpdateShopperShiftRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string
        onShift:
          type: boolean
        storeID:
          type: string

    user_UpdateShopperShiftResponse:
      description: This object is returned as output
      type: object
      properties:
        success:
          type: boolean
        timestamp:
          type: string
        message:
          type: string

    DriverObject:
      description: "Generic schema for a Driver"
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        activationDate:
          type: string
        activationCode:
          type: string
        resetCode:
          type: string
        resetExpiration:
          type: string
        accountType:
          type: string
        driverID:
          type: string
        rating:
          type: number
        onShift:
          type: boolean

    CustomerObject:
      description: "Generic schema for a Customer"
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        activationDate:
          type: string
        activationCode:
          type: string
        resetCode:
          type: string
        resetExpiration:
          type: string
        accountType:
          type: string
        customerID:
          type: string
        address:
          type: string
        groceryLists:
          type: array
          items:
            $ref: '#/components/schemas/GroceryListObject'
        shoppingCart:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"
        preference:
          type: object
        wallet:
          type: object

    AdminObject:
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        activationDate:
          type: string
        activationCode:
          type: string
        resetCode:
          type: string
        resetExpiration:
          type: string
        accountType:
          type: string
        adminID:
          type: string

    user_LoginRequest:
      description: This object is expected as input
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        userType:
          type: string

    user_LoginResponse:
      description: This object is returned as output
      type: object
      properties:
        Token:
          type: string
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_RegisterDriverRequest:
      description: This object is expected as input
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string

    user_RegisterDriverResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_RegisterShopperRequest:
      description: This object is expected as input
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string

    user_RegisterShopperResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_RegisterAdminRequest:
      description: This object is expected as input
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string

    user_RegisterAdminResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_RegisterCustomerRequest:
      description: This object is expected as input
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string

    user_RegisterCustomerResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_AccountVerifyRequest:
      description: This object is expected as input
      type: object
      properties:
        email:
          type: string
        activationCode:
          type: string
        userType:
          type: string

    user_AccountVerifyResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string
        userType:
          type: string

    user_SetCurrentLocationRequest:
      description: This object is expected as input
      type: object
      properties:
        driverID:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        address:
          type: string

    user_SetCurrentLocationResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_GetCurrentUserRequest:
      description: This object is expected as input
      type: object
      properties:
        JWTToken:
          type: string

    user_GetCurrentUserResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string
        user:
          oneOf:
            - $ref: '#/components/schemas/DriverObject'
            - $ref: '#/components/schemas/CustomerObject'
            - $ref: '#/components/schemas/ShopperObject'
            - $ref: '#/components/schemas/AdminObject'


    user_ScanItemRequest:
      description: This object is expected as input
      type: object
      properties:
        orderID:
          type: string
        barcode:
          type: string

    user_ScanItemResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    user_CompletePackagingOrderRequest:
      description: This object is expected as input
      type: object
      properties:
        orderID:
          type: string
        getNext:
          type: boolean

    user_CompletePackagingOrderResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string

    shopping_GetNextQueuedRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string
        storeID:
          type: string

    shopping_GetNextQueuedResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        date:
          type: string
        queueOfOrders:
          type: array
          items:
            $ref: "#/components/schemas/OrderObject"
        newCurrentOrder:
          type: object

    shopping_GetQueueRequest:
      description: This object is expected as input
      type: object
      properties:
        storeID:
          type: string

    shopping_GetQueueResponse:
      description: This object is expected as output
      type: object
      properties:
        response:
          type: boolean
        message:
          type: string
        queueOfOrders:
          type: array
          items:
            $ref: "#/components/schemas/OrderObject"


    payment_GetStatusRequest:
      description: This object is expected as input
      type: object
      properties:
        orderID:
          type: string

    payment_GetStatusResponse:
      description: This object is expected as output
      type: object
      properties:
        status:
          type: string
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string

    payment_GetItemsRequest:
      description: This object is expected as input
      type: object
      properties:
        orderID:
          type: string

    payment_GetItemsResponse:
      description: This object is expected as output
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemObject"
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string

    shopping_PopulateTablesRequest:
      description: This object is expected as input
      type: object

    shopping_PopulateTablesResponse:
      description: This object is expected as output
      type: object

    user_GetGroceryListRequest:
      description: This object is expected as input
      type: object
      properties:
        JWTToken:
          type: string

    user_GetGroceryListResponse:
      description: This object is expected as output
      type: object
      properties:
        groceryLists:
          type: array
          items:
            $ref: '#/components/schemas/GroceryListObject'
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string

    delivery_AddDeliveryDetailRequest:
      description: This object is expected as input
      type: object
      properties:
        deliveryStatus:
          type: string
        detail:
          type: string
        deliveryID:
          type: string
        timestamp:
          type: string

    delivery_AddDeliveryDetailResponse:
      description: This object is expected as output
      type: object
      properties:
        message:
          type: string
        id:
          type: integer

    delivery_AssignDriverToDeliveryRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string
        deliveryID:
          type: string

    delivery_AssignDriverToDeliveryResponse:
      description: This object is expected as output
      type: object
      properties:
        isAssigned:
          type: boolean
        message:
          type: string
        pickUpLocation:
          $ref: "#/components/schemas/GeoPointObject"
        dropOffLocation:
          $ref: "#/components/schemas/GeoPointObject"

    delivery_CreateDeliveryRequest:
      description: This object is expected as input
      type: object
      properties:
        orderID:
          type: string
        customerID:
          type: string
        storeID:
          type: string
        timeOfDelivery:
          type: string
        placeOfDelivery:
          $ref: "#/components/schemas/GeoPointObject"

    delivery_CreateDeliveryResponse:
      description: This object is expected as output
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string
        deliveryID:
          type: string

    GeoPointObject:
      description: This is a geoPoint object
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
        address:
          type: string

    delivery_GetDeliveryDetailRequest:
      description: This object is expected as input
      type: object
      properties:
        deliveryID:
          type: string
        adminID:
          type: string

    delivery_GetDeliveryDetailResponse:
      description: This object is expected as output
      type: object
      properties:
        message:
          type: string
        detail:
          type: object
          items:
            $ref: "#/components/schemas/DeliveryDetailObject"

    DeliveryDetailObject:
      description: The details of the delivery
      type: object
      properties:
        id:
          type: integer
        deliveryID:
          type: string
        time:
          type: string
        deliveryStatus:
          type: string
        detail:
          type: string

    delivery_GetDeliveryStatusRequest:
      description: This object is expected as input
      type: object
      properties:
        deliveryID:
          type: string

    delivery_GetDeliveryStatusResponse:
      description: This object is expected as output
      type: object
      properties:
        status:
          type: string
        message:
          type: string

    delivery_GetNextOrderForDriverRequest:
      description: This object is expected as input
      type: object
      properties:
        driverID:
          type: string
        currentLocation:
          $ref: "#/components/schemas/GeoPointObject"
        rangeOfDelivery:
          type: number

    delivery_GetNextOrderForDriverResponse:
      description: This object is expected as output
      type: object
      properties:
        message:
          type: string
        delivery:
          $ref: "#/components/schemas/DeliveryObject"

    delivery_RemoveDriverFromDeliveryRequest:
      description: This object is expected as input
      type: object
      properties:
        driverID:
          type: string
        deliveryID:
          type: string

    delivery_RemoveDriverFromDeliveryResponse:
      description: This object is expected as output
      type: object
      properties:
        isSuccess:
          type: boolean
        message:
          type: string

    delivery_TrackDeliveryRequest:
      description: This object is expected as input
      type: object
      properties:
        deliveryID:
          type: string

    delivery_TrackDeliveryResponse:
      description: This object is expected as output
      type: object
      properties:
        currentLocation:
          $ref: "#/components/schemas/GeoPointObject"
        message:
          type: string

    delivery_UpdateDeliveryStatusRequest:
      description: This object is expected as input
      type: object
      properties:
        status:
          type: string
        deliveryID:
          type: string
        detail:
          type: string

    delivery_UpdateDeliveryStatusResponse:
      description: This object is expected as output
      type: object
      properties:
        message:
          type: string


    user_UpdateDriverShiftRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string
        onShift:
          type: boolean

    user_UpdateDriverShiftResponse:
      description: This object is returned as output
      type: object
      properties:
        success:
          type: boolean
        timestamp:
          type: string
        message:
          type: string

    analytics_CreateUserReportRequest:
      description: This object is expected as input
      type: object
      properties:
        JWTToken:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        reportType:
          type: string

    analytics_CreateUserReportResponse:
      description: This object is expected as output
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string

    payment_GetCustomersActiveOrdersRequest:
      description: This object is expected as input
      type: object
      properties:
        jwtToken:
          type: string

    payment_GetCustomersActiveOrdersResponse:
      description: This object is expected as output
      type: object
      properties:
        orderID:
          type: string
        hasActiveOrder:
          type: boolean
        message:
          type: string

    user_CompleteDeliveryRequest:
      description: This object is expected as input
      type: object
      properties:
        orderID:
          type: string

    user_CompleteDeliveryResponse:
      description: This object is returned as output
      type: object
      properties:
        message:
          type: string
        success:
          type: boolean
        timestamp:
          type: string

    DeliveryObject:
      description: This is a delivery object
      type: object
      properties:
        deliveryID:
          type: string
        pickUpLocation:
          $ref: "#/components/schemas/GeoPointObject"
        dropOffLocation:
          $ref: "#/components/schemas/GeoPointObject"
        orderID:
          type: string
        customerId:
          type: string
        storeId:
          type: string
        driverId:
          type: string
        status:
          type: string
        cost:
          type: number
        completed:
          type: boolean
        deliveryDetail:
          type: array
          items:
            $ref: "#/components/schemas/DeliveryDetailObject"

    analytics_CreateFinancialReportRequest:
      description: This object is expected as input
      type: object
      properties:
        JWWTToken:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        reportType:
          type: string

    analytics_CreateFinancialReportResponse:
      description: This object is expected as output
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string


    analytics_CreateMonthlyReportRequest:
      description: This object is expected as input
      type: object
      properties:
        JWWTToken:
          type: string
        reportType:
          type: string

    analytics_CreateMonthlyReportResponse:
      description: This object is expected as output
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string