/*
 * Library Service
 * The library service
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ShoppingAddShopperRequest;
import org.openapitools.client.model.ShoppingAddShopperResponse;
import org.openapitools.client.model.ShoppingGetItemsRequest;
import org.openapitools.client.model.ShoppingGetItemsResponse;
import org.openapitools.client.model.ShoppingGetShoppersRequest;
import org.openapitools.client.model.ShoppingGetShoppersResponse;
import org.openapitools.client.model.ShoppingGetStoresResponse;
import org.openapitools.client.model.ShoppingRemoveQueuedOrderRequest;
import org.openapitools.client.model.ShoppingRemoveQueuedOrderResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ShoppingApi
 */
@Ignore
public class ShoppingApiTest {

    private final ShoppingApi api = new ShoppingApi();

    
    /**
     * Endpoint for adding shopper to shopper list
     *
     * Refer to summary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addShopperTest() throws ApiException {
        ShoppingAddShopperRequest shoppingAddShopperRequest = null;
        ShoppingAddShopperResponse response = api.addShopper(shoppingAddShopperRequest);

        // TODO: test validations
    }
    
    /**
     * Endpoint for Get Items use case
     *
     * Refer to summary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getItemsTest() throws ApiException {
        ShoppingGetItemsRequest shoppingGetItemsRequest = null;
        ShoppingGetItemsResponse response = api.getItems(shoppingGetItemsRequest);

        // TODO: test validations
    }
    
    /**
     * Endpoint for Get Shoppers use case
     *
     * Refer to summary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getShoppersTest() throws ApiException {
        ShoppingGetShoppersRequest shoppingGetShoppersRequest = null;
        ShoppingGetShoppersResponse response = api.getShoppers(shoppingGetShoppersRequest);

        // TODO: test validations
    }
    
    /**
     * Endpoint for Get Stores use case
     *
     * Refer to summary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStoresTest() throws ApiException {
        Object body = null;
        ShoppingGetStoresResponse response = api.getStores(body);

        // TODO: test validations
    }
    
    /**
     * Endpoint for removing a queued order.
     *
     * Refer to summary
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void removeQueuedOrderTest() throws ApiException {
        ShoppingRemoveQueuedOrderRequest shoppingRemoveQueuedOrderRequest = null;
        ShoppingRemoveQueuedOrderResponse response = api.removeQueuedOrder(shoppingRemoveQueuedOrderRequest);

        // TODO: test validations
    }
    
}
